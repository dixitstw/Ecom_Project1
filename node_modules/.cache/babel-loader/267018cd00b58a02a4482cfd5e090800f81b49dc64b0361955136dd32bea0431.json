{"ast":null,"code":"var _jsxFileName = \"/home/dipti/Codes/ecom/src/Component/Usestate.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n/*\n        Usestate =>It is a hook to manage state\n\n        rerenders the page when the value changes syntax:\n\n        let/const [name, function] =useState(initial value)\n        name: variable name\n        funciton = function to update variable\n        initial value = starting value \n        0-9: number\n        \"\": srting\n        {}:object\n        []:array\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Usestate = () => {\n  _s();\n  let [count, setCount] = useState(0);\n  let [value, setValue] = useState(10);\n\n  //useEffect(function, state)\n  useEffect(() => {\n    alert(\"value changed\");\n  }, [value, count]);\n  const additem = () => {\n    setCount(count + 1);\n  };\n  const removeitem = () => {\n    setCount(count - 1);\n  };\n  const add = () => {\n    setValue(value + 10);\n  };\n  const remove = () => {\n    setValue(value - 10);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this), count < 10 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: additem,\n      children: \"add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 27\n    }, this), count > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: removeitem,\n      children: \"remove\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Count: \", value]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 1\n    }, this), value < 100 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: add,\n      children: \"add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 28\n    }, this), value > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: remove,\n      children: \"remove\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true);\n};\n_s(Usestate, \"ywHTLBbte8ADBfdKUljFOLcebM8=\");\n_c = Usestate;\nexport default Usestate;\nvar _c;\n$RefreshReg$(_c, \"Usestate\");","map":{"version":3,"names":["React","useEffect","useState","Usestate","count","setCount","value","setValue","alert","additem","removeitem","add","remove"],"sources":["/home/dipti/Codes/ecom/src/Component/Usestate.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\n/*\n        Usestate =>It is a hook to manage state\n\n        rerenders the page when the value changes syntax:\n\n        let/const [name, function] =useState(initial value)\n        name: variable name\n        funciton = function to update variable\n        initial value = starting value \n        0-9: number\n        \"\": srting\n        {}:object\n        []:array\n*/\nconst Usestate = () => {\n    let [count, setCount] = useState(0)\n    let [value, setValue] = useState(10)\n\n\n     //useEffect(function, state)\n      useEffect(()=>{\n     alert(\"value changed\")\n     }, [value, count])\n\n\n    const additem = ()=> {\n      setCount(count + 1)\n    }\n\n    const removeitem = ()=> {\n      setCount(count - 1)\n    }\n\n    const add = () => {\n      setValue(value + 10)\n    }\n\n    const remove = () => {\n      setValue(value - 10)\n    }\n   \n  return (\n    <>\n    <div>\n    Count: {count}\n    </div>\n    {\n      (count < 10) &&     <button onClick={additem}>add</button>\n\n    }\n    {\n      (count > 0) &&     <button onClick={removeitem}>remove</button>\n\n    }\n\n<div>\n    Count: {value}\n</div>\n\n    {\n      (value < 100) &&     <button onClick={add}>add</button>\n\n    }\n    {\n      (value > 0) &&     <button onClick={remove}>remove</button>\n\n    }\n    </>\n  )\n}\n\nexport default Usestate"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAAA;AAcA,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACnB,IAAI,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,CAAC,CAAC;EACnC,IAAI,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;;EAGnC;EACCD,SAAS,CAAC,MAAI;IACfO,KAAK,CAAC,eAAe,CAAC;EACtB,CAAC,EAAE,CAACF,KAAK,EAAEF,KAAK,CAAC,CAAC;EAGnB,MAAMK,OAAO,GAAG,MAAK;IACnBJ,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACrB,CAAC;EAED,MAAMM,UAAU,GAAG,MAAK;IACtBL,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACrB,CAAC;EAED,MAAMO,GAAG,GAAG,MAAM;IAChBJ,QAAQ,CAACD,KAAK,GAAG,EAAE,CAAC;EACtB,CAAC;EAED,MAAMM,MAAM,GAAG,MAAM;IACnBL,QAAQ,CAACD,KAAK,GAAG,EAAE,CAAC;EACtB,CAAC;EAEH,oBACE;IAAA,wBACA;MAAA,WAAK,SACE,EAACF,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QACP,EAEHA,KAAK,GAAG,EAAE,iBAAS;MAAQ,OAAO,EAAEK,OAAQ;MAAA,UAAC;IAAG;MAAA;MAAA;MAAA;IAAA,QAAS,EAIzDL,KAAK,GAAG,CAAC,iBAAS;MAAQ,OAAO,EAAEM,UAAW;MAAA,UAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAS,eAIrE;MAAA,WAAK,SACM,EAACJ,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QACX,EAGCA,KAAK,GAAG,GAAG,iBAAS;MAAQ,OAAO,EAAEK,GAAI;MAAA,UAAC;IAAG;MAAA;MAAA;MAAA;IAAA,QAAS,EAItDL,KAAK,GAAG,CAAC,iBAAS;MAAQ,OAAO,EAAEM,MAAO;MAAA,UAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA,gBAG1D;AAEP,CAAC;AAAA,GAvDKT,QAAQ;AAAA,KAARA,QAAQ;AAyDd,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}