{"ast":null,"code":"var _jsxFileName = \"/home/dipti/Codes/ecom/src/Component/Usestate.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n/*\n        Usestate =>It is a hook to manage state\n\n        rerenders the page when the value changes syntax:\n\n        let/const [name, function] =useState(initial value)\n        name: variable name\n        funciton = function to update variable\n        initial value = starting value \n        0-9: number\n        \"\": srting\n        {}:object\n        []:array\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Usestate = () => {\n  _s();\n  let [count, setCount] = useState(0);\n  let [value, setValue] = useState(0);\n\n  //useEffect(function, state)\n  useEffect(() => {\n    alert(\"value changed\");\n  }, [count]);\n  const additem = () => {\n    setCount(count + 1);\n  };\n  const removeitem = () => {\n    setCount(count - 1);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Count: \", count, count < 10 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: additem,\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 27\n      }, this), count > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: removeitem,\n        children: \"remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(Usestate, \"k3phGAhIkgnG9MaY5kTshOXwnTE=\");\n_c = Usestate;\nexport default Usestate;\nvar _c;\n$RefreshReg$(_c, \"Usestate\");","map":{"version":3,"names":["React","useEffect","useState","Usestate","count","setCount","value","setValue","alert","additem","removeitem"],"sources":["/home/dipti/Codes/ecom/src/Component/Usestate.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\n/*\n        Usestate =>It is a hook to manage state\n\n        rerenders the page when the value changes syntax:\n\n        let/const [name, function] =useState(initial value)\n        name: variable name\n        funciton = function to update variable\n        initial value = starting value \n        0-9: number\n        \"\": srting\n        {}:object\n        []:array\n*/\nconst Usestate = () => {\n    let [count, setCount] = useState(0)\n    let [value, setValue] = useState(0)\n\n\n     //useEffect(function, state)\n     useEffect(()=>{\n    alert(\"value changed\")\n    }, [count])\n\n\n    const additem = ()=> {\n      setCount(count + 1)\n    }\n\n    const removeitem = ()=> {\n      setCount(count - 1)\n    }\n\n   \n  return (\n    <>\n    <div>\n    Count: {count}\n    {\n      (count < 10) &&     <button onClick={additem}>add</button>\n\n    }\n    {\n      (count > 0) &&     <button onClick={removeitem}>remove</button>\n\n    }\n\n    </div>\n    </>\n  )\n}\n\nexport default Usestate"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAAA;AAcA,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACnB,IAAI,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,CAAC,CAAC;EACnC,IAAI,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC;;EAGlC;EACAD,SAAS,CAAC,MAAI;IACfO,KAAK,CAAC,eAAe,CAAC;EACtB,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EAGX,MAAMK,OAAO,GAAG,MAAK;IACnBJ,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACrB,CAAC;EAED,MAAMM,UAAU,GAAG,MAAK;IACtBL,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACrB,CAAC;EAGH,oBACE;IAAA,uBACA;MAAA,WAAK,SACE,EAACA,KAAK,EAEVA,KAAK,GAAG,EAAE,iBAAS;QAAQ,OAAO,EAAEK,OAAQ;QAAA,UAAC;MAAG;QAAA;QAAA;QAAA;MAAA,QAAS,EAIzDL,KAAK,GAAG,CAAC,iBAAS;QAAQ,OAAO,EAAEM,UAAW;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EAI3D,iBACH;AAEP,CAAC;AAAA,GApCKP,QAAQ;AAAA,KAARA,QAAQ;AAsCd,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}